<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>BIGCAL Time Calculation</title>
  <style>
    body { font-family: Arial, sans-serif; margin: 20px; background-color: #f4f4f4; }
    h2, h3 { color: #333; }
    table { width: 100%; border-collapse: collapse; background: #fff; box-shadow: 0px 2px 5px rgba(0,0,0,0.2); }
    th, td { border: 1px solid #ccc; padding: 10px; text-align: left; }
    th { background: #007BFF; color: white; }
    .summary { font-weight: bold; background: #ffcc00; }
    .whatsapp-message { background: #333; color: white; padding: 15px; margin-top: 20px; border-radius: 5px; white-space: pre-wrap; }
  </style>
  <script>
    const sizeOptions = [
      "2052", "2014", "2056", "JA100B", "JK100B", "7044", "70K5", "6054", "657",
      "S0103", "S0130", "S0160", "S0191", "S0649", "S0645", "S0348", "SB088"
    ];

    function formatDate(date) {
      let d = new Date(date);
      let day = d.getDate().toString().padStart(2, '0');
      let month = (d.getMonth() + 1).toString().padStart(2, '0');
      let year = d.getFullYear().toString().slice(-2);
      return `${day}-${month}-${year}`;
    }

    function updateCalculations() {
      let productionInputs = document.querySelectorAll(".production");
      let speedInputs = document.querySelectorAll(".speed");
      let troubleInputs = document.querySelectorAll(".timeRequired");

      let totalProductionTime = 0;
      let productionMessage = "";
      productionInputs.forEach((input, index) => {
        let production = parseFloat(input.value) || 0;
        let speed = parseFloat(speedInputs[index].value) || 1;
        let time = (production / speed).toFixed(2);
        totalProductionTime += parseFloat(time);

        let row = input.closest("tr");
        let size = row.querySelector(".size").value || "N/A";
        row.querySelector(".timeCell").textContent = time;

        productionMessage += `\n${size} â†’ ${production} / ${speed} = ${time} min`;
      });

      let totalTroubleTime = 0;
      let troubleMessage = "";
      troubleInputs.forEach((input, index) => {
        let timeRequired = parseFloat(input.value) || 0;
        totalTroubleTime += timeRequired;
        troubleMessage += `\n${index + 1}. ${document.querySelectorAll(".trouble")[index].value}: ${timeRequired} min`;
      });

      let totalAvailableTime = 480;
      let remainingTime = totalAvailableTime - totalProductionTime;
      let totalUsedTime = totalProductionTime + totalTroubleTime;

      document.getElementById("totalProductionTime").textContent = totalProductionTime.toFixed(2) + " min";
      document.getElementById("remainingTime").textContent = remainingTime.toFixed(2) + " min";
      document.getElementById("totalTroubleTime").textContent = totalTroubleTime.toFixed(2) + " min";
      document.getElementById("totalUsedTime").textContent = totalUsedTime.toFixed(2) + " min";

      let date = formatDate(document.getElementById("date").value);
      let shift = document.getElementById("shift").value;
      let group = document.getElementById("group").value;
      let phone = document.getElementById("phone").value;

      let message = `*BIGCAL TIME CALCULATION*\n\nDate: ${date}\nShift: ${shift}\nGroup: ${group}\n\n*Production Data*\nSize | Production/SPEED${productionMessage}\n\nTotal Production Time: ${totalProductionTime.toFixed(2)} min\n\nTotal Trouble Time: ${totalTroubleTime.toFixed(2)} min\n\nRemaining Time Breakdown:${troubleMessage}\n\nTotal Time Used:${totalProductionTime.toFixed(2)} + ${totalTroubleTime.toFixed(2)} = ${totalUsedTime.toFixed(2)} min`;

      document.getElementById("whatsappMessage").textContent = message;
    }

    function sendWhatsAppMessage() {
      let message = document.getElementById("whatsappMessage").textContent;
      let encodedMessage = encodeURIComponent(message);
      let phoneNumber = document.getElementById("phone").value;
      let whatsappURL = `https://wa.me/${phoneNumber}?text=${encodedMessage}`;
      window.open(whatsappURL, '_blank');
    }

    function addProductionRow() {
      let table = document.getElementById("productionTable").getElementsByTagName('tbody')[0];
      let newRow = table.insertRow();
      let sizeDropdown = `<select class="size">${sizeOptions.map(opt => `<option value="${opt}">${opt}</option>`).join('')}</select>`;
      newRow.innerHTML = `
        <td>${sizeDropdown}</td>
        <td><input type="number" class="production" oninput="updateCalculations()"></td>
        <td><input type="number" class="speed" oninput="updateCalculations()"></td>
        <td class="timeCell">0.00</td>
        <td><button type="button" onclick="deleteRow(this)">Delete</button></td>
      `;
    }

    function addTroubleRow() {
      let table = document.getElementById("troubleTable").getElementsByTagName('tbody')[0];
      let newRow = table.insertRow();
      let rowCount = table.rows.length;
      newRow.innerHTML = `
        <td>${rowCount}</td>
        <td><input type="text" class="trouble"></td>
        <td><input type="number" class="timeRequired" oninput="updateCalculations()"></td>
        <td><button type="button" onclick="deleteRow(this)">Delete</button></td>
      `;
    }

    function deleteRow(button) {
      button.closest("tr").remove();
      updateCalculations();
    }

    window.onload = function () {
      const today = new Date();
      const yyyy = today.getFullYear();
      const mm = String(today.getMonth() + 1).padStart(2, '0');
      const dd = String(today.getDate()).padStart(2, '0');
      document.getElementById("date").value = `${yyyy}-${mm}-${dd}`;
    };
  </script>
</head>
<body>

  <h2>BIGCAL Time Calculation Form</h2>
  <label for="date">Select Date:</label>
  <input type="date" id="date" required><br><br>

  <label for="shift">Select Shift:</label>
  <select id="shift">
    <option value="Day">Day</option>
    <option value="Middle">Middle</option>
    <option value="Night">Night</option>
  </select><br><br>

  <label for="group">Select Group:</label>
  <select id="group">
    <option value="A">Group A</option>
    <option value="B" selected>Group B</option>
    <option value="C">Group C</option>
    <option value="D">Group D</option>
  </select><br><br>

  <label for="phone">Select Phone:</label>
  <select id="phone">
    <option value="+917058975363" selected>Purva</option>
    <option value="9876543210">987-654-3210</option>
    <option value="5556667777">555-666-7777</option>
    <option value="8009001000">800-900-1000</option>
  </select><br><br>

  <h3>Production Data</h3>
  <table id="productionTable">
    <thead>
      <tr><th>Size</th><th>Production</th><th>Speed</th><th>Time (min)</th><th>Action</th></tr>
    </thead>
    <tbody></tbody>
  </table>
  <button type="button" onclick="addProductionRow()">Add Production Row</button>

  <h3>Trouble Log</h3>
  <table id="troubleTable">
    <thead>
      <tr><th>Serial No</th><th>Trouble</th><th>Time Required</th><th>Action</th></tr>
    </thead>
    <tbody></tbody>
  </table>
  <button type="button" onclick="addTroubleRow()">Add Trouble Row</button>

  <h3>Final Summary</h3>
  <table border="1">
    <tr><td>Total Production Time</td><td><span id="totalProductionTime">0 min</span></td></tr>
    <tr><td>Total Trouble Time</td><td><span id="totalTroubleTime">0 min</span></td></tr>
    <tr><td>Remaining Available Time</td><td><span id="remainingTime">480 min</span></td></tr>
    <tr class="summary"><td><b>Total Time Used</b></td><td><span id="totalUsedTime">0 min</span></td></tr>
  </table>

  <button type="button" onclick="updateCalculations()">Generate Summary</button>
  <button type="button" onclick="sendWhatsAppMessage()">Send via WhatsApp</button>

  <div class="whatsapp-message"><pre id="whatsappMessage"></pre></div>

</body>
</html>
